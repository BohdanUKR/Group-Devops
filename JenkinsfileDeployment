pipeline {
    agent any
    environment {
    NPM_CONFIG_CACHE = "${WORKSPACE}/.npm"
}
    
    tools {
        nodejs "NodeJS" // Replace with the actual name
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM',
                          branches: [[name: 'main']],
                          doGenerateSubmoduleConfigurations: false,
                          extensions: [],
                          submoduleCfg: [],
                          userRemoteConfigs: [[url: 'https://github.com/BohdanUKR/Group-Devops.git']]
                ])
            }
        }
        
        stage('Deliver') {
            steps {
                // Use this stage to release your artifact using your project's build tool
                bat 'npm install'

                bat 'start /B npm start' // Replace with your actual release command

                timeout(time: 10, unit: 'SECONDS') {
                    // You can add additional steps after giving the application some time to start
                    // For example, you might want to run tests or other tasks that depend on the application running

                    // Once you're done with the additional steps, you can proceed to the next stages
                }
            }
        }
        
        stage('Deploy to Dev Environment') {
            steps {
                echo 'Mock deployment to Development Environment'
            }
        }
        
        stage('Deploy to QAT Environment') {
            steps {
                echo 'Mock deployment to QAT (Quality Assurance Testing) Environment'
            }
        }
        
        stage('Deploy to Staging Environment') {
            steps {
                echo 'Mock deployment to Staging Environment'
            }
        }
        
        stage('Deploy to Production Environment') {
            steps {
                echo 'Mock deployment to Production Environment'
            }
        }
    }
    
    post {
        success {
            // Perform any post-deployment actions specific to the deployment pipeline
            echo "Pipeline deployed successfully"
        }
    }
}